{"version":3,"sources":["page-request.js","search.js","index.js"],"names":["request","require","module","exports","number","onSuccess","onFailure","error","response","body","statusCode","JSON","parse","statusMessage","SearchBox","props","style","width","padding","Autocomplete","id","autoComplete","freeSolo","options","arr","map","option","title","renderInput","params","TextField","placeholder","margin","variant","App","data","forEach","item","thumbnailUrl","setState","items","state","concat","msg","console","fetchMoreData","length","hasMore","getPage","page","themeControl","bool","setDark","mode","log","this","isDark","customTheme","createTheme","palette","primary","main","light","dark","secondary","responsiveFontSizes","ThemeProvider","theme","AppBar","position","Toolbar","Typography","align","FormGroup","FormControlLabel","control","onChange","label","labelPlacement","backgroundColor","background","default","dataLength","next","loader","Grid","container","spacing","columns","xs","sm","md","xl","Array","from","_","index","Card","sx","minHeight","Skeleton","height","CardContent","gutterBottom","component","color","endMessage","textAlign","v","CardMedia","image","React","Component","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8d3c159.chunk.js","sourcesContent":["const request = require('request');\r\n\r\nconst dataUrl = 'https://jsonplaceholder.typicode.com/photos';\r\n\r\nfunction getPage(number, onSuccess, onFailure) {\r\n    request(`${dataUrl}?albumId=${number}`, (error, response, body) => {\r\n        if (error) {\r\n            onFailure(error);\r\n        } else if (response.statusCode === 200) {\r\n            onSuccess(JSON.parse(body));\r\n        } else {\r\n            onFailure(`${response.statusCode}: ${response.statusMessage}`);\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = getPage;","import React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\n\r\nexport default function SearchBox(props) {\r\n  return (\r\n    <div style={{ width: \"100%\", padding: \"12px\" }}>\r\n      <Autocomplete\r\n        id=\"free-solo-demo\"\r\n        autoComplete\r\n        freeSolo\r\n        SearchBox\r\n        options={props.arr.map((option) => option.title)}\r\n        renderInput={(params) => (\r\n          <TextField {...params} placeholder=\"Pesquisar\" margin=\"none\" variant=\"outlined\" />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport { render } from 'react-dom';\n\nimport { Switch } from \"@blueprintjs/core\";\nimport 'normalize.css';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css';\n\nimport SearchBox from './search';\n\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport getPage from './page-request';\n\n//import './index.css';\n\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Grid from '@mui/material/Grid';\nimport Skeleton from '@mui/material/Skeleton';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider, responsiveFontSizes } from '@mui/material/styles';\nimport { FormGroup } from '@mui/material';\nimport { FormControlLabel } from '@mui/material';\n//import { ptBR } from '@mui/material/locale';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      hasMore: true,\n      mode: 'light',\n    };\n    this.page = 1;\n    this.fetchMoreData();\n  };\n\n  onSuccess = (data) => {\n    data.forEach((item) => {\n      return {title: item.title, thumbnailUrl: item.thumbnailUrl};\n    });\n    this.setState({\n      items: this.state.items.concat(data)\n    });\n  };\n\n  onFailure = (msg) => {\n    console.error(msg);\n  };\n\n  fetchMoreData = () => {\n    if (this.state.items.length >= 500) {\n      this.setState({ hasMore: false });\n      return;\n    }\n\n    getPage(this.page, this.onSuccess, this.onFailure);\n\n    this.page++;\n  };\n\n  themeControl = (bool) => {\n    if (bool) {\n      return 'light'\n    } else {\n      return 'dark'\n    }\n  };\n\n  setDark = () => {\n    if (this.state.mode === 'light') {\n      this.setState({ mode: 'dark' });\n      \n    } else {\n      this.setState({ mode: 'light' });\n      \n    }\n  };\n\n  render() {\n    console.log(this.state.isDark);\n    let customTheme = createTheme({\n      palette: {\n        mode: this.state.mode,\n        primary: {\n          main: '#096c90',\n          light: '#0066ff',\n          dark: '#00000',\n        },\n        secondary: {\n          main: '#04f4f5',\n        },\n      },\n  });\n  customTheme = responsiveFontSizes(customTheme);\n    return (\n      <ThemeProvider theme={customTheme}>\n        <div> \n          <AppBar position=\"static\">\n            <Toolbar >\n              <Typography align=\"center\" variant=\"h6\">demo: my-code-capabilities</Typography>\n              <SearchBox arr={this.state.items}/>\n              <FormGroup>\n                <FormControlLabel control={<Switch onChange={this.setDark} />} label=\"Tema\" labelPlacement=\"start\" />\n              </FormGroup>\n            </Toolbar>\n          </AppBar>\n          <InfiniteScroll\n          style={{backgroundColor: customTheme.palette.background.default}}\n          dataLength={this.state.items.length}\n          next={this.fetchMoreData}\n          hasMore={this.state.hasMore}\n          loader={\n            <Grid container style={{padding: \"10px\"}} spacing={2} columns={{ xs: 1, sm: 8, md: 12, xl: 20 }}>\n              {Array.from(Array(10)).map((_, index) => (\n                <Grid item xs={1} sm={4} md={4} xl={4} key={index}>\n                  <Card key={index} sx={{ minHeight: 500}}>\n                    <Skeleton variant=\"rectangular\" height={344}/>\n                    <CardContent>\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        <Skeleton width={70} />\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        <Skeleton/>\n                        <Skeleton/>\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          }\n          //height={400}\n          endMessage={\n            <p style={{ textAlign: \"center\" }}>\n              <b>Yay! VocÃª viu todos os items!</b>\n            </p>\n          }\n          >\n            <Grid container style={{padding: \"10px\"}} spacing={2} columns={{ xs: 1, sm: 8, md: 12, xl: 20 }}>\n              {this.state.items.map((v, index) => (\n                <Grid item xs={1} sm={4} md={4} xl={4} key={index}>\n                  <Card sx={{ minHeight: 500}}>\n                    <CardMedia\n                      style={{ height: \"344px\" }}\n                      image={v.thumbnailUrl}\n                      title=\"Contemplative Reptile\"\n                    />\n                    <CardContent>\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        TÃ­tulo\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {v.title}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </InfiniteScroll>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nrender(<App />, document.getElementById(\"root\"));\n\n\n/*                  \n<Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 1, xl: 3 }}>\n    <Grid item xs={1} xl={1} key={index}>\n      <Item>xs=2</Item>\n    </Grid>\n</Grid>\n\n*/"],"sourceRoot":""}