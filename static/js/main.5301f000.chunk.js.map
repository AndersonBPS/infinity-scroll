{"version":3,"sources":["page-request.js","index.js"],"names":["request","require","module","exports","number","onSuccess","onFailure","error","response","body","statusCode","JSON","parse","statusMessage","App","props","data","forEach","item","title","thumbnailUrl","setState","items","state","concat","msg","console","fetchMoreData","length","hasMore","getPage","page","setDark","isDark","log","this","imgStlye","display","marginLeft","marginRight","height","align","Alignment","LEFT","style","color","RIGHT","onChange","className","dataLength","next","loader","justifyContent","alignItems","endMessage","map","v","index","elevation","Elevation","THREE","src","React","Component","render","document","getElementById"],"mappings":"6FAAA,IAAMA,EAAUC,EAAQ,KAgBxBC,EAAOC,QAZP,SAAiBC,EAAQC,EAAWC,GAChCN,EAAQ,GAAD,OAHK,8CAGL,oBAAuBI,IAAU,SAACG,EAAOC,EAAUC,GAClDF,EACAD,EAAUC,GACqB,MAAxBC,EAASE,WAChBL,EAAUM,KAAKC,MAAMH,IAErBH,EAAU,GAAD,OAAIE,EAASE,WAAb,aAA4BF,EAASK,qB,mMCDpDC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURV,UAAY,SAACW,GACXA,EAAKC,SAAQ,SAACC,GACZ,MAAO,CAACC,MAAOD,EAAKC,MAAOC,aAAcF,EAAKE,iBAEhD,EAAKC,SAAS,CACZC,MAAO,EAAKC,MAAMD,MAAME,OAAOR,MAhBhB,EAoBnBV,UAAY,SAACmB,GACXC,QAAQnB,MAAMkB,IArBG,EAwBnBE,cAAgB,WACV,EAAKJ,MAAMD,MAAMM,QAAU,IAC7B,EAAKP,SAAS,CAAEQ,SAAS,KAI3BC,IAAQ,EAAKC,KAAM,EAAK1B,UAAW,EAAKC,WAExC,EAAKyB,SAhCY,EA4CnBC,QAAU,WACJ,EAAKT,MAAMU,OACb,EAAKZ,SAAS,CAAEY,QAAQ,IAGxB,EAAKZ,SAAS,CAAEY,QAAQ,KA/C1B,EAAKV,MAAQ,CACXD,MAAO,GACPO,SAAS,EACTI,QAAQ,GAEV,EAAKF,KAAO,EACZ,EAAKJ,gBARY,E,0CAuDnB,WACED,QAAQQ,IAAIC,KAAKZ,MAAMU,QACvB,IAAMG,EAAW,CACfC,QAAS,QACTC,WAAY,OACZC,YAAa,OACbC,OAAQ,QAEV,OACE,gCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAaC,MAAOC,IAAUC,KAA9B,SACE,oBAAIC,MAAO,CAACC,MAAO,aAAnB,0CAEF,eAAC,IAAD,CAAaJ,MAAOC,IAAUI,MAA9B,UACE,oBAAIF,MAAO,CAACJ,OAAQ,QAApB,yBACA,cAAC,IAAD,CAAQO,SAAUZ,KAAKH,gBAG3B,cAAC,IAAD,CACEgB,UAAU,kBACVC,WAAYd,KAAKZ,MAAMD,MAAMM,OAC7BsB,KAAMf,KAAKR,cACXE,QAASM,KAAKZ,MAAMM,QACpBsB,OACE,qBAAKH,UAAU,UAAf,SACE,qBAAKJ,MAAO,CAACQ,eAAgB,SAAUC,WAAW,UAAlD,SACE,cAAC,IAAD,QAINC,WACE,0DAbJ,SAgBGnB,KAAKZ,MAAMD,MAAMiC,KAAI,SAACC,EAAGC,GAAJ,OACpB,eAAC,IAAD,CAAMT,UAAU,gBAA4BU,UAAWC,IAAUC,MAAjE,UACE,8BACE,qBAAKhB,MAAOR,EAAUyB,IAAKL,EAAEpC,iBAE/B,8BACE,6BAAKoC,EAAErC,YAL0BsC,e,GA5F/BK,IAAMC,WA2GxBC,iBAAO,cAAClD,EAAD,IAASmD,SAASC,eAAe,U","file":"static/js/main.5301f000.chunk.js","sourcesContent":["const request = require('request');\r\n\r\nconst dataUrl = 'https://jsonplaceholder.typicode.com/photos';\r\n\r\nfunction getPage(number, onSuccess, onFailure) {\r\n    request(`${dataUrl}?albumId=${number}`, (error, response, body) => {\r\n        if (error) {\r\n            onFailure(error);\r\n        } else if (response.statusCode === 200) {\r\n            onSuccess(JSON.parse(body));\r\n        } else {\r\n            onFailure(`${response.statusCode}: ${response.statusMessage}`);\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = getPage;","import React, { Component } from 'react';\nimport {render} from 'react-dom';\nimport { Card, Spinner, Switch, Elevation, Navbar, NavbarHeading, NavbarGroup, Alignment} from \"@blueprintjs/core\";\nimport 'normalize.css';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport getPage from './page-request';\nimport './index.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      hasMore: true,\n      isDark: true,\n    };\n    this.page = 1;\n    this.fetchMoreData();\n  };\n\n  onSuccess = (data) => {\n    data.forEach((item) => {\n      return {title: item.title, thumbnailUrl: item.thumbnailUrl};\n    });\n    this.setState({\n      items: this.state.items.concat(data)\n    });\n  };\n\n  onFailure = (msg) => {\n    console.error(msg);\n  };\n\n  fetchMoreData = () => {\n    if (this.state.items.length >= 500) {\n      this.setState({ hasMore: false });\n      return;\n    }\n\n    getPage(this.page, this.onSuccess, this.onFailure);\n\n    this.page++;\n  };\n\n  /*\n  themeControl = (bool) => {\n    if (bool) {\n      return [\"item-div-bright\", document.body.style.backgroundColor = \"white\"]\n    } else {\n      return [\"item-div-dark\", document.body.style.backgroundColor = \"black\"]\n    }\n  };\n  */\n  setDark = () => {\n    if (this.state.isDark) {\n      this.setState({ isDark: false });\n      //return themeControl(false)[1];\n    } else {\n      this.setState({ isDark: true });\n      //return themeControl(true)[1];\n    }\n  };\n  \n\n  render() {\n    console.log(this.state.isDark);\n    const imgStlye = {\n      display: \"block\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      height: \"auto\"\n    };\n    return (\n      <div>\n        <Navbar>\n          <NavbarGroup align={Alignment.LEFT}>\n            <h1 style={{color: \"lawngreen\"}}>demo: my-code-capabilities</h1>\n          </NavbarGroup>\n          <NavbarGroup align={Alignment.RIGHT}>\n            <h3 style={{height: \"25px\"}}>Tema Escuro</h3>\n            <Switch onChange={this.setDark}/>\n          </NavbarGroup>\n        </Navbar>\n        <InfiniteScroll\n          className=\"infinite-scroll\"\n          dataLength={this.state.items.length}\n          next={this.fetchMoreData}\n          hasMore={this.state.hasMore}\n          loader={\n            <div className=\"overlay\">\n              <div style={{justifyContent: \"center\", alignItems:\"center\"}}>\n                <Spinner/>\n              </div>\n            </div>\n          }\n          endMessage={\n            <p>Yay! You have seen it all</p>  \n          }\n        >\n          {this.state.items.map((v, index) => (\n            <Card className=\"item-div-dark\" key={index} elevation={Elevation.THREE}>\n              <div>\n                <img style={imgStlye} src={v.thumbnailUrl}/>\n              </div>\n              <div>\n                <h2>{v.title}</h2>\n              </div>\n            </Card>\n          ))}\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}