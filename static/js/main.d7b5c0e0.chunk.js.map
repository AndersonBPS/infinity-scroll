{"version":3,"sources":["page-request.js","index.js"],"names":["request","require","module","exports","number","onSuccess","onFailure","error","response","body","statusCode","JSON","parse","statusMessage","App","props","data","forEach","item","title","thumbnailUrl","setState","items","state","concat","msg","console","fetchMoreData","length","hasMore","getPage","page","setDark","isDark","log","themeControl","bool","imgStlye","display","marginLeft","marginRight","height","style","color","onClick","this","className","dataLength","next","loader","endMessage","map","v","index","src","React","Component","render","document","getElementById"],"mappings":"6FAAA,IAAMA,EAAUC,EAAQ,KAgBxBC,EAAOC,QAZP,SAAiBC,EAAQC,EAAWC,GAChCN,EAAQ,GAAD,OAHK,8CAGL,oBAAuBI,IAAU,SAACG,EAAOC,EAAUC,GAClDF,EACAD,EAAUC,GACqB,MAAxBC,EAASE,WAChBL,EAAUM,KAAKC,MAAMH,IAErBH,EAAU,GAAD,OAAIE,EAASE,WAAb,aAA4BF,EAASK,qB,oLCDpDC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAWRV,UAAY,SAACW,GACXA,EAAKC,SAAQ,SAACC,GACZ,MAAO,CAACC,MAAOD,EAAKC,MAAOC,aAAcF,EAAKE,iBAEhD,EAAKC,SAAS,CACZC,MAAO,EAAKC,MAAMD,MAAME,OAAOR,MAjBhB,EAqBnBV,UAAY,SAACmB,GACXC,QAAQnB,MAAMkB,IAtBG,EAyBnBE,cAAgB,WACV,EAAKJ,MAAMD,MAAMM,QAAU,IAC7B,EAAKP,SAAS,CAAEQ,SAAS,KAI3BC,IAAQ,EAAKC,KAAM,EAAK1B,UAAW,EAAKC,WAExC,EAAKyB,SAjCY,EAoCnBC,QAAU,WACJ,EAAKT,MAAMU,QACb,EAAKZ,SAAS,CAAEY,QAAQ,IACxBP,QAAQQ,IAAI,EAAKX,MAAMU,UAEvB,EAAKZ,SAAS,CAAEY,QAAQ,IACxBP,QAAQQ,IAAI,EAAKX,MAAMU,UA1CR,EA8CnBE,aAAe,SAACC,KA5Cd,EAAKb,MAAQ,CACXD,MAAO,GACPO,SAAS,EACTI,QAAQ,GAEV,EAAKF,KAAO,EACZ,EAAKJ,gBACLD,QAAQQ,IAAI,EAAKX,MAAMU,QATN,E,0CAkDnB,WACE,IAAMI,EAAW,CACfC,QAAS,QACTC,WAAY,OACZC,YAAa,OACbC,OAAQ,QAEV,OACE,gCACE,oBAAIC,MAAO,CAACC,MAAO,aAAnB,mDACA,cAAC,IAAD,CAAQC,QAASC,KAAKb,UACtB,uBACA,cAAC,IAAD,CACEc,UAAU,kBACVC,WAAYF,KAAKtB,MAAMD,MAAMM,OAC7BoB,KAAMH,KAAKlB,cACXE,QAASgB,KAAKtB,MAAMM,QACpBoB,OAAQ,cAAC,IAAD,IACRC,WACE,0DAPJ,SAUGL,KAAKtB,MAAMD,MAAM6B,KAAI,SAACC,EAAGC,GAAJ,OACpB,eAAC,IAAD,CAAMP,UAAU,WAAhB,UACE,8BACE,qBAAKJ,MAAOL,EAAUiB,IAAKF,EAAEhC,iBAE/B,8BACE,6BAAKgC,EAAEjC,YALqBkC,e,GA1E1BE,IAAMC,WAyFxBC,iBAAO,cAAC3C,EAAD,IAAS4C,SAASC,eAAe,U","file":"static/js/main.d7b5c0e0.chunk.js","sourcesContent":["const request = require('request');\r\n\r\nconst dataUrl = 'https://jsonplaceholder.typicode.com/photos';\r\n\r\nfunction getPage(number, onSuccess, onFailure) {\r\n    request(`${dataUrl}?albumId=${number}`, (error, response, body) => {\r\n        if (error) {\r\n            onFailure(error);\r\n        } else if (response.statusCode === 200) {\r\n            onSuccess(JSON.parse(body));\r\n        } else {\r\n            onFailure(`${response.statusCode}: ${response.statusMessage}`);\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = getPage;","import React, { Component } from 'react';\nimport {render} from 'react-dom';\nimport { Card, Spinner, Button} from \"@blueprintjs/core\";\nimport 'normalize.css';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport getPage from './page-request';\nimport './index.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      hasMore: true,\n      isDark: false,\n    };\n    this.page = 1;\n    this.fetchMoreData();\n    console.log(this.state.isDark);\n  };\n\n  onSuccess = (data) => {\n    data.forEach((item) => {\n      return {title: item.title, thumbnailUrl: item.thumbnailUrl};\n    });\n    this.setState({\n      items: this.state.items.concat(data)\n    });\n  };\n\n  onFailure = (msg) => {\n    console.error(msg);\n  };\n\n  fetchMoreData = () => {\n    if (this.state.items.length >= 250) {\n      this.setState({ hasMore: false });\n      return;\n    }\n\n    getPage(this.page, this.onSuccess, this.onFailure);\n\n    this.page++;\n  };\n\n  setDark = () => {\n    if (this.state.isDark) {\n      this.setState({ isDark: false });\n      console.log(this.state.isDark);\n    } else {\n      this.setState({ isDark: true });\n      console.log(this.state.isDark);\n    }\n  };\n\n  themeControl = (bool) => {\n\n  };\n\n  render() {\n    const imgStlye = {\n      display: \"block\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      height: \"auto\"\n    };\n    return (\n      <div>\n        <h1 style={{color: \"lawngreen\"}}>demo: react-infinite-scroll-component</h1>\n        <Button onClick={this.setDark}></Button>\n        <hr />\n        <InfiniteScroll\n          className=\"infinite-scroll\"\n          dataLength={this.state.items.length}\n          next={this.fetchMoreData}\n          hasMore={this.state.hasMore}\n          loader={<Spinner/>}\n          endMessage={\n            <p>Yay! You have seen it all</p>  \n          }\n        >\n          {this.state.items.map((v, index) => (\n            <Card className=\"item-div\" key={index}>\n              <div>\n                <img style={imgStlye} src={v.thumbnailUrl}/>\n              </div>\n              <div>\n                <h2>{v.title}</h2>\n              </div>\n            </Card>\n          ))}\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}